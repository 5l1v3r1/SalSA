"""
Generates report from alerts generated by rules
"""
# https://github.com/corkami/docs/blob/master/PE/PE.md
# python modules
import pprint
import os
import sys
import traceback

# local modules
import pe

# directory of rules
import rules

# import rules
for r in rules.__all__:
  __import__('rules.' + r)

try:
  alerts = []
  # parse the file specified at the comand line
  obj = pe.PE(sys.argv[1], True)
  # print(obj)
  # pprint.pprint(obj.parse_imports(), indent=2)
  # obj.parse_exports()
  # obj.parse_relocations()
  # obj.parse_tls()
  # obj.parse_resources()

  for r in rules.__all__:
    alerts.extend(sys.modules['rules.' + r].run(obj))
  # display any alerts
  if alerts:
    for a in alerts:
      print(a)
      # display delimiter
      print('-' * 80)
except Exception as e:
  traceback.print_exc()

# # open all files in tests/
# # for f in os.listdir('tests'):
# for f in ['21_m', '28_m', '30_m', '47_m', '59_m', '60_m', '62_m', '63_m', '78_m', '83_m', '91_m']:
#   # display file header
#   print '#' * 80
#   print 'File: ' + f
#   print '#' * 80
#   try:
#     # parse the file specified at the comand line
#     obj = pe.PE('tests/' + f, True)
#     pprint.pprint(obj.parse_imports(), indent=2)
#     obj.parse_exports()
#     obj.parse_relocations()
#     obj.parse_tls()
#     obj.parse_resources()
#     # alerts = []
#     # for r in rules.__all__:
#     #   alerts.extend(sys.modules['rules.' + r].run(obj))
#   except Exception as e:
#     print 'ERROR'
#     traceback.print_exc()
#     continue
#   # # display any alerts
#   # if alerts:
#   #   for a in alerts:
#   #     print(a)
#   #     # display delimiter
#   #     print('-' * 80)
